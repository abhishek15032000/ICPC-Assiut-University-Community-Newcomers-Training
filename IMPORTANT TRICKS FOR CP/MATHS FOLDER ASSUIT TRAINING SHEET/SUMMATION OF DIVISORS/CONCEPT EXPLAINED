https://codeforces.com/group/MWSDmqGsZm/contest/223338/problem/G    ----problem link 




https://cp-algorithms.com/algebra/divisors.html   ---refernce for the summation of divisors concept


first i tried the CP algorithms reference but due to overflow it could not give correct result 

so i then switched to chceking prime no concept of sqrt(N) SOLUTION
because divisors of a number exist in pair 


so i need to find those pairs
NOTE:-imp  
when both the pairs (a,b) have same value we need to add only one value for consideration 

like for 9 :-  1 + 3+ 9 //// but our ans would be come 16 if we take two times 3 as n/i=3 (b) and a=3 so we need to a+b to the sum only if (a!=b)



#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000000000000007
/*ll binary_expo(ll x,ll power)
{
    ll ans=1;
    while(power)
    {
        if(power&1)
        {
            ans=(ans*x);
            power--;
        }
        x=(x*x);
        power>>=1;
    }
    return ans;
}

ll gp(ll x,ll y)
{
    ll t=binary_expo(x,y+1);
    ll ans=((t-1)/(x-1));
    return ans;
}*/
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll n;
    cin>>n;
  //  map<ll,ll>m;
  if(n==1)
  {
      cout<<1<<endl;
      return 0;
  }
  ll sum=0;
  sum+=n;
  sum+=1;
    for(ll i=2;i*i<=n;i++)
    {
             if(n%i==0)
             {
                 sum+=i;
                 ll x=n/i;
                 if(x!=i)
                 {sum+=x;}
             }
    }
    cout<<sum<<endl;
   /* if(n>1)
    {
        m[n]++;
    }*/
    /*ll ans=1;
    for(auto it=m.begin();it!=m.end();it++)
    {
        ll x=it->first;
        ll y=it->second;
        ans*=gp(x,y);
    }
    cout<<ans<<endl;*/
}
